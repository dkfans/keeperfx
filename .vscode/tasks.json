{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Compile, Copy Files, Launch",
			"type": "shell",
			"windows": {
				"command": [
					"Write-Host ('Source Code directory: ' + '${workspaceFolder}'.Replace('\\', '/')) -ForegroundColor White;",
					"$jsonContent = Get-Content '${workspaceFolder}\\.vscode\\user.json' | ConvertFrom-Json;",
					"$gameDir = ($jsonContent | Select-Object -ExpandProperty game_directory).TrimEnd('\\');",
					"if (-not (Test-Path $gameDir)) {",
					"    Write-Host 'Game directory missing in /.vscode/user.json, please edit the file and update it.' -ForegroundColor Red;",
					"    Write-Host 'Example: D:/Games/DungeonKeeper/ (be sure to use forward slashes)' -ForegroundColor Red;",
					"    return;",
					"} else {",
					"    Write-Host ('Game directory: ' + $gameDir) -ForegroundColor White;",
					"}",
					"wsl make -j`nproc` all;",
					"if ($?) {",
					"    Write-Host 'Compilation successful!' -ForegroundColor Green;",
					"}",
					"Stop-Process -Name 'keeperfx' -ErrorAction SilentlyContinue;",
					"while (Get-Process -Name 'keeperfx' -ErrorAction SilentlyContinue) {",
					"   Start-Sleep -Milliseconds 10;",
					"}",
					"copy \"${workspaceFolder}\\bin\\*\" \"$gameDir\";",
					"$gameArgs = $jsonContent.game_arguments;",
					"cd \"$gameDir\";",
					"Start-Process keeperfx.exe -ArgumentList \"$gameArgs\""
				]
			},
			"linux": {
				"command": [
					"if [ ! -f \"${workspaceFolder}/.vscode/user.json\" ]; then cp \"${workspaceFolder}/.vscode/defaultuser\" \"${workspaceFolder}/.vscode/user.json\" && echo \"/.vscode/user.json was created, please edit it and fill in your game directory.\"; fi;",
					"jq --version > /dev/null 2>&1 || { echo -e '\\033[0;91mError: jq is not installed. Please install it using: sudo apt-get install jq\\033[0m'; exit 1; };",
					"echo -e '\\033[0;97mSource Code directory: ${workspaceFolder}\\033[0m'; game_dir=$(jq -r '.game_directory' ${workspaceFolder}/.vscode/user.json); if [ ! -d \"$game_dir\" ]; then echo -e '\\033[0;91mGame directory missing in .vscode/user.json. Please edit the file and update it.\\033[0m'; exit 1; else echo -e '\\033[0;97mGame directory: ' $game_dir '\\033[0m'; fi;",
					"make -j`nproc` all && echo -e '\\033[0;32mCompilation successful!\\033[0m';",
					"game_dir=$(jq -r '.game_directory' ${workspaceFolder}/.vscode/user.json); cd \"$game_dir\" && cp \"${workspaceFolder}/bin/\"* .;",
					"game_dir=$(jq -r '.game_directory' ${workspaceFolder}/.vscode/user.json); game_args=$(jq -r '.game_arguments' ${workspaceFolder}/.vscode/user.json); cd \"$game_dir\" && if [ -n \"$WSL_DISTRO_NAME\" ]; then cmd.exe /C \"keeperfx.exe $game_args\"; else wine 'keeperfx.exe' $game_args; fi;"
				]
			},
			"problemMatcher": "$gcc",
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"presentation": {
				"echo": false,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false
			}
		},
		{
			// After the project is first opened, user.json will be created
			"label": "Create user.json",
			"type": "shell",
			"windows": {
				"command": [
					"if (-not (Test-Path '${workspaceFolder}\\.vscode\\user.json')) {",
					"    Copy-Item '${workspaceFolder}\\.vscode\\defaultuser' '${workspaceFolder}\\.vscode\\user.json';",
					"    Write-Host '/.vscode/user.json was created, please edit it and fill in your game directory.';",
					"}"
				]
			},
			"linux": {
				"command": "if [ ! -f \"${workspaceFolder}/.vscode/user.json\" ]; then cp \"${workspaceFolder}/.vscode/defaultuser\" \"${workspaceFolder}/.vscode/user.json\" && echo \"/.vscode/user.json was created, please edit it and fill in your game directory.\"; fi"
			},
			"problemMatcher": "$gcc",
			"runOptions": {
				"runOn": "folderOpen"
			},
			"group": "build",
			"presentation": {
				"echo": false,
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false
			}
		},
		{
			"label": "Log",
			"type": "shell",
			"windows": {
				"command": [
					"$gameDir = (Get-Content '${workspaceFolder}\\.vscode\\user.json' | ConvertFrom-Json).game_directory;",
					"cd $gameDir;",
					"Clear-Content keeperfx.log;",
					"Get-Content keeperfx.log -Wait"
				]
			},
			"linux": {
				"command": "game_dir=$(jq -r '.game_directory' ${workspaceFolder}/.vscode/user.json); cd \"$game_dir\" && > keeperfx.log && less +F --mouse keeperfx.log"
			},
			"problemMatcher": "$gcc",
			"dependsOn": "Check For Game Directory",
			"group": "build"
		},
		{
			"label": "Clean",
			"type": "shell",
			"windows": {
				"command": "wsl make -j`nproc` clean"
			},
			"linux": {
				"command": "make -j`nproc` clean"
			},
			"problemMatcher": "$gcc",
			"group": "build"
		},
		{
			"label": "Generate compile_commands.json",
			"type": "shell",
			"windows": {
				"command": [
					"wsl make clean-build clean-tools;",
					"wsl bear -- make -j2 standard"
				]
			},
			"linux": {
				"command": "make clean-build clean-tools && bear -- make -j2 standard"
			},
			"problemMatcher": "$gcc",
			"group": "build",
			"dependsOn": "Compile",
		}
	]
}